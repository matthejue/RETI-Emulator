name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output: reti_emulator-linux
          - os: macos-latest
            output: reti_emulator-macos
          - os: windows-latest
            output: reti_emulator-windows.exe

    steps:
    - uses: actions/checkout@v3

    - name: Set up environment
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential wget tar
        wget https://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.5.tar.gz
        tar -xzf ncurses-6.5.tar.gz
        cd ncurses-6.5
        ./configure --prefix=$GITHUB_WORKSPACE --enable-static --without-shared
        make
        make install

    - name: Set up environment
      if: matrix.os == 'macos-latest'
      run: |
        brew install gcc

    - name: Install MSYS2
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: mingw-w64-ucrt-x86_64-gcc mingw-w64-ucrt-x86_64-make mingw-w64-ucrt-x86_64-ncurses

    - name: Build with Make
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p lib include/ncurses
        cp /ucrt64/lib/libncurses.a ./lib
        cp /ucrt64/include/ncurses/ncurses.h ./include/ncurses
        mingw32-make WINDOWS=1
        mv ./bin/reti_emulator_main ./bin/${{ matrix.output }}
      shell: msys2 {0}

    - name: Build with Make
      if: matrix.os == 'ubuntu-latest'
      run: |
        make LINUX_STATIC=1
        mv ./bin/reti_emulator_main ./bin/${{ matrix.output }}
      shell: bash

    - name: Build with Make
      if: matrix.os == 'macos-latest'
      run: |
        make MACOS=1
        mv ./bin/reti_emulator_main ./bin/${{ matrix.output }}
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.output }}
        path: ./bin/${{ matrix.output }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./reti_emulator-linux/reti_emulator-linux
          ./reti_emulator-macos/reti_emulator-macos
          ./reti_emulator-windows.exe/reti_emulator-windows.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
